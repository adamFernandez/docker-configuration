services:
  # nginx - web server
  nginx:
    build:
      context: ./docker-config/nginx
      dockerfile: ./Dockerfile
    env_file: &env
      - ./cms/.env
    init: true
    ports:
      - '8888:80'
    volumes:
      - cpresources:/var/www/project/cms/web/cpresources:delegated
      - ./cms/web:/var/www/project/cms/web:cached
  # php - run php-fpm
  php:
    build: &php-build
      context: ./docker-config/php-prod-craft
      dockerfile: ./Dockerfile
    depends_on:
      - 'mysql'
      - 'redis'
    env_file: *env
    init: true
    tty: true
    volumes: &php-volumes
      - cpresources:/var/www/project/cms/web/cpresources:delegated
      - storage:/var/www/project/cms/storage:delegated
      - ./cms:/var/www/project/cms:cached
      # Specific directories that need to be bind-mounted
      - ./cms/storage/backups:/var/www/project/cms/storage/backups:delegated
      - ./cms/storage/logs:/var/www/project/cms/storage/logs:delegated
      - ./cms/storage/runtime/compiled_templates:/var/www/project/cms/storage/runtime/compiled_templates:delegated
      - ./cms/storage/runtime/compiled_classes:/var/www/project/cms/storage/runtime/compiled_classes:delegated
      - ./cms/vendor:/var/www/project/cms/vendor:delegated
      - ./cms/storage/rebrand:/var/www/project/cms/storage/rebrand:delegated
  # php - run php-fpm with xdebug
  php_xdebug:
    build:
      context: ./docker-config/php-dev-craft
      dockerfile: ./Dockerfile
    depends_on:
      - 'php'
    env_file: *env
    init: true
    tty: true
    volumes: *php-volumes
  # queue - runs queue jobs via php craft queue/listen
  queue:
    build: *php-build
    command: "sh /var/www/project/run_queue.sh" 
    depends_on:
      - 'php'
    env_file: *env
    init: true
    tty: true
    volumes: *php-volumes
  # mysql - database
  mysql:
    build:
      context: ./docker-config/mysql
      dockerfile: ./Dockerfile
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    env_file: *env
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: project
      MYSQL_USER: project
      MYSQL_PASSWORD: project
    init: true
    expose:
      - '3306'
    volumes:
      - db-data:/var/lib/mysql
      - ./db-seed:/docker-entrypoint-initdb.d
      - ./.my.local.cnf:/var/lib/.my.local.cnf:ro
      - ./.my.ext.cnf:/var/lib/.my.ext.cnf:ro
  # redis - key/value database for caching & php sessions
  redis:
    build:
      context: ./docker-config/redis
      dockerfile: ./Dockerfile
    expose:
      - '6379'
    init: true
  astro:
    build:
      context: ./astro
      dockerfile: ./Dockerfile
    command: sh -c "pnpm install && pnpm run dev --port '3000'"
    environment:
      CRAFT_AUTH_TOKEN: Ph34v4PhJorkpsJMAZPDvh0J6lpir8Xj
      CRAFT_API_URL: http://docker.localhost:8888/api
      CRAFT_API_BASE_URL: http://docker.localhost:8888
      GQL_HOST: http://docker.localhost:8888/api
      FRONTEND_URL_PORT: http://localhost:3000
      NUXT_HMR_PORT: '24670'
      PORT: '3000'
    extra_hosts:
      - docker.localhost:host-gateway
    ports:
      - '3000:3000'
      - '24670:24670'
    working_dir: /app
    volumes:
      - ./astro:/app
  jq:
    build:
      context: ./docker-config/utils/
      dockerfile: ./Dockerfile
    volumes:
      - ./db-data:/data
volumes:
  db-data:
  cpresources:
  storage:
